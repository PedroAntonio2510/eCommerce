spring:
  application:
    name: api
  output:
    ansi:
      enabled: always
  datasource:
    url: jdbc:postgresql://localhost:5432/${postgres.db}
    username: ${postgres.username}
    password: ${postgres.password}
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: update
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
  rabbitmq:
    host: localhost
    port: 5672
    username: ${rabbit.username}
    password: ${rabbit.password}

logging:
  level:
    org:
      springframework.web: DEBUG

#logging:
#  pattern:
#    console: '%clr(%d{dd-MM-yyyy HH:mm:ss}){faint} %clr(%5p) %clr([%t]){faint} %clr(%-40.40logger){cyan} %clr(:){yellow} %m%n'
#  file:
#    name: app.log
#  level:
#    root: error
#    io:
#      github:
#        springJpa: trace
#    org:
#      springframework:
#        web: debug
#        security: trace

rabbitmq:
  order:
    notification:
      exchange: ${notification.exchange}
    payment:
      exchange: ${payment.exchange}
    queue-created: ${order.created.queue}
    queue-update: ${order.update.queue}
    queue-complete: ${order.complete.queue}

jwt:
  public:
    key: classpath:app.pub
  private:
    key: classpath:app.key