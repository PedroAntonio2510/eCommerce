#spring.application.name=api
#spring.datasource.url=jdbc:postgresql://localhost:5432/ecommerceapiDB
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
spring:
  application:
    name: api
  output:
    ansi:
      enabled: always
  datasource:
    url: jdbc:postgresql://localhost:5432/${postgres.db}
    username: ${postgres.username}
    password: ${postgres.password}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  rabbitmq:
    host: localhost
    port: 5672
    username: ${rabbit.username}
    password: ${rabbit.password}

logging:
  pattern:
    console: '%clr(%d{dd-MM-yyyy HH:mm:ss}){faint} %clr(%5p) %clr([%t]){faint} %clr(%-40.40logger){cyan} %clr(:){yellow} %m%n'
  file:
    name: app.log
  level:
    root: error
    io:
      github:
        springJpa: trace
    org:
      springframework:
        web: debug
        security: trace

rabbitmq:
  order:
    exchange: ${order-notification.exchange}
    queue-created: ${order.created.queue}
    queue-update: ${order.update.queue}
